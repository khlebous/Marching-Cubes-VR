#pragma kernel CSMain


int _BrushShape;
float4 _BrushColor;

float4x4 _FromMcToBrushMatrix;
RWStructuredBuffer<float4> _VoxelColors;

float3 _Scale;
uint _Width, _Height, _Depth;


bool IsPointInBrush(float2 pos) {

	if (_BrushShape == 1) {
		//wheel
		return distance(pos, 0) <= 0.5;
	}
	else {
		//rectangle
		float2 closestPointInRectangle = clamp(pos, -0.5, 0.5);
		return closestPointInRectangle.x == pos.x && closestPointInRectangle.y == pos.y;
	}
}

[numthreads(8, 1, 8)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.z * _Width;
	float4 rawPosition = float4(id, 1);
	float4 position = mul(_FromMcToBrushMatrix, rawPosition);

	if (IsPointInBrush(position.xz))
		_VoxelColors[idx] = _BrushColor;
}

