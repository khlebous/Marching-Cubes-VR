#pragma kernel CSMain

StructuredBuffer<float> _Voxels;

RWTexture3D<float3> _Result;

int _Width, _Height, _Depth;

float GetVoxelValue(int x, int y, int z)
{
	if (x == 0 || y == 0 || z == 0 || x == _Width - 1 || y == _Height - 1 || z == _Depth - 1)
		return 0;

	if (y == 1)
		return 1;

	float value = _Voxels[x + z * _Width];
	float voxelValue = max(value - y, 0);

	return voxelValue;
}

[numthreads(8, 8, 8)]
void CSMain(uint3 id : SV_DispatchThreadID)
{

	float dx = GetVoxelValue(id.x - 1, id.y, id.z) - GetVoxelValue(id.x + 1, id.y, id.z);
	float dy = GetVoxelValue(id.x, id.y - 1, id.z) - GetVoxelValue(id.x, id.y + 1, id.z);
	float dz = GetVoxelValue(id.x, id.y, id.z - 1) - GetVoxelValue(id.x, id.y, id.z + 1);

	if (dy == 0 && dx == 0 && dz == 0)
		_Result[id] = float3(0, 0, 0);
	else
		_Result[id] = normalize(float3(dx, dy, dz));

}
